{"total":14,"pageSize":10,"pageCount":2,"data":[{"title":"IDEA注释模板","slug":"IDEA_annotation_template","date":"2019-09-21T12:53:32.000Z","updated":"2020-02-16T06:18:50.890Z","comments":true,"pin":null,"path":"api/articles/IDEA_annotation_template.json","excerpt":"","keywords":null,"cover":"/img/article/IDE/idea-class-comment.png","content":"<h2 id=\"idea类和方法注释模板的配置\">IDEA类和方法注释模板的配置</h2>\n<p>参考博客： <a href=\"https://blog.csdn.net/qq_34581118/article/details/78409782\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/qq_34581118/article/details/78409782</a></p>\n<h3 id=\"1生成类注释\">1.生成类注释</h3>\n<ul>\n<li>打开Preferences</li>\n<li>Editor -&gt; File and Code Templates -&gt; Files -&gt; Class</li>\n</ul>\n<p><img src=\"/img/article/IDE/idea-class-comment.png\" alt=\"\"></p>\n<ul>\n<li>生成注解类模板</li>\n</ul>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"PLAIN\"><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\">* @program: $&#123;PROJECT_NAME&#125;</span><br><span class=\"line\">*</span><br><span class=\"line\">* @description: $&#123;description&#125;</span><br><span class=\"line\">*</span><br><span class=\"line\">* @author: Mr.Wang</span><br><span class=\"line\">*</span><br><span class=\"line\">* @create: $&#123;YEAR&#125;-$&#123;MONTH&#125;-$&#123;DAY&#125; $&#123;HOUR&#125;:$&#123;MINUTE&#125;</span><br><span class=\"line\">**/</span><br></pre></td></tr></table></figure></div>\n<hr>\n<h3 id=\"2生成方法注释\">2.生成方法注释</h3>\n<ul>\n<li>打开Preferences</li>\n<li>Editor -&gt; Live Templates -&gt; 点击右边加号为自己添加一个Templates Group -&gt; 然后选中自己的Group再次点击加号添加Live Templates</li>\n<li>然后设置自己喜欢的快捷键 在Abbreviation里面 记得在Applicable in 里面勾选,起码也要勾选class</li>\n<li>然后在Edit variables里面添加参数和返回值的自动取值</li>\n<li>然后再你的方法上面直接输入/ + 你设置的Abbreviation快捷键 + tab键就直接生成了 （我设置的是/+ a + tab）</li>\n</ul>\n<p><img src=\"/img/article/IDE/idea-function-comment.png\" alt=\"\"></p>\n<ul>\n<li>生成方法注解模板</li>\n</ul>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"PLAIN\"><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">**</span><br><span class=\"line\">* @Description: $description$</span><br><span class=\"line\">* @Param: $params$</span><br><span class=\"line\">* @return: $returns$</span><br><span class=\"line\">* @Author: Mr.Wang</span><br><span class=\"line\">* @Date: $date$</span><br><span class=\"line\">*/</span><br></pre></td></tr></table></figure></div>\n","text":"IDEA类和方法注释模板的配置参考博客： https://blog.csdn.net/qq_34581118/article/details/784097821.生成类注释打开PreferencesEditor -&gt; File and Code Templates -&gt","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"IDEA","slug":"IDEA","count":1,"path":"api/tags/IDEA.json"}]},{"title":"hexo&github搭建博客","slug":"hexo+github","date":"2019-09-14T12:40:25.000Z","updated":"2020-02-16T06:19:15.051Z","comments":true,"pin":null,"path":"api/articles/hexo+github.json","excerpt":"","keywords":null,"cover":null,"content":"<h4 id=\"步骤\">步骤</h4>\n<ul>\n<li>安装Node.js</li>\n<li>添加国内镜像源<br>\n<code>npm config set registry https://registry.npm.taobao.org</code></li>\n<li>安装git</li>\n<li>注册Github账号，并新建仓库<code>xxx.github.io</code>，其中<code>xxx</code>为你的Github用户名，随后在仓库Settings按钮点击后，往下拉可以看到Github Pages，点击链接后可以看到自己网页</li>\n<li>安装Hexo<br>\n<code>npm i hexo-cli -g</code><br>\n<code>hexo -v</code><br>\n<code>npm i hexo-deployer-git</code></li>\n<li>blog初始化<br>\n<code>hexo init</code>初始化文件夹<br>\n<code>npm install</code>安装必备组件</li>\n<li>安装插件<br>\n参考 <a href=\"https://github.com/blleng/hexo-theme-lx\" target=\"_blank\" rel=\"noopener\">https://github.com/blleng/hexo-theme-lx</a></li>\n<li>修改配置<br>\n项目根目录下_config.yml文件中，修改最后一行的配置</li>\n</ul>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"YAML\"><figure class=\"iseeu highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repository:</span> <span class=\"attr\">https://github.com/WeilunZ/WeilunZ.github.io</span></span><br><span class=\"line\"><span class=\"attr\">  branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure></div>\n<ul>\n<li>\n<p>hexo三命令<br>\n<code>hexo g</code>生成静态网页<br>\n<code>hexo s</code>运行本地服务器<br>\n<code>hexo d</code>上传至github</p>\n</li>\n<li>\n<p>增加一个新文章<br>\n在项目目录下<code>hexo new post &quot;hexo博客搭建&quot;</code>，双引号内的为文章的title。</p>\n</li>\n</ul>\n<hr>\n<p>ps: 更多细节可以参考 <a href=\"https://zhuanlan.zhihu.com/p/35668237\" target=\"_blank\" rel=\"noopener\">https://zhuanlan.zhihu.com/p/35668237</a></p>\n","text":"步骤安装Node.js添加国内镜像源<br>npm config set registry https://registry.npm.taobao.org安装git注册Github账号，并新建仓库xxx.github.io，其中xxx为你的Github用户名，随后在仓库Setti","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"blog","slug":"blog","count":1,"path":"api/tags/blog.json"}]},{"title":"Git快速入门","slug":"git","date":"2019-08-27T13:00:00.000Z","updated":"2020-02-16T06:37:57.481Z","comments":true,"pin":null,"path":"api/articles/git.json","excerpt":"","keywords":null,"cover":"/img/article/git/git.png","content":"<h2 id=\"git的工作示意图\">git的工作示意图</h2>\n<p><img src=\"/img/article/git/git.png\" alt=\"image\"></p>\n<p>工作区间：我们自己创建的工程文件，在编辑器可直观显示。</p>\n<p>缓存区：提交代码，解决冲突的中转站，可以通过git shell窗口显示。</p>\n<p>本地仓库：连接本地跟远程大妈的枢纽，在不联网的情况下可以将本地的代码提交到本地仓库；缓存区是能在git shell窗口显示。</p>\n<p>远程仓库：保存我们代码的服务器，例如github，gitlab，可以登陆到服务器上看具体的信息。</p>\n<h4 id=\"正常提交代码的命令和解释\">正常提交代码的命令和解释</h4>\n<p>//如果是本地新创建的项目，需要先执行git init,表示生成本地的git管理</p>\n<p><code>git add files</code>  --添加文件，实际开发中可以使用 <code>git add -A</code>，使用-A:将新增、删除、修改的文件改动全保存至缓存区。</p>\n<p><code>git commit -m &quot;comments&quot;</code> 将代码从缓存区保存至本地仓库，并添加说明文字。</p>\n<p>//如果是本地新创建的项目，git remote add origin XXXXXX 将本地仓库与指定的远程仓库创建联系。</p>\n<p><code>push -u origin master</code> 将本地仓库代码推送至远程仓库的master分支。</p>\n<h2 id=\"git常用命令的比较和分析\">git常用命令的比较和分析</h2>\n<h4 id=\"git-clone-git-pull-git-fetch\">git clone、git pull、git fetch</h4>\n<p>git clone url 将其他仓库克隆到本地，本地存放着与远程仓库一模一样的版本库记录。</p>\n<p>git pull是拉取远程分支更新到本地仓库的操作。git pull是相当于从远程仓库获取最新版本，然后再与本地分支merge（合并）。git pull = git fetch + git merge</p>\n<p>git fetch 更新远程代码到本地仓库。当前分支指向的FETCH_HEAD。FETCH_HEAD指的是: 某个branch在服务器上的最新状态。</p>\n<p><img src=\"/img/article/git/diff.png\" alt=\"image\"></p>\n<h4 id=\"git-diff\">git diff</h4>\n<p>用于比较两次修改的差异</p>\n<p>git diff HEAD – <file>  查看工作区和版本库里面最新版本的区别</file></p>\n<h4 id=\"git-reset\">git reset</h4>\n<p>git reset --hard HEAD^ 回退到上一个版本</p>\n<p>git reset --hard commitId(具体版本的id)  回退到指定版本</p>\n<h4 id=\"git-checkout\">git checkout</h4>\n<p>git checkout – <file> 把文件在工作区制定文件的修改撤销</file></p>\n<p>git checkout . 把文件在工作区的修改全部撤销</p>\n<p>git checkout dev 切换到dev分支</p>\n<h4 id=\"git-branch\">git branch</h4>\n<p>git branch 查看当前分支</p>\n<p>git branch -d dev 删除dev分支</p>\n<p>git checkout -b dev 创建dev分支，然后切换到dev分支</p>\n<p>git branch -a 查看远程分支和本地分支</p>\n<h4 id=\"git-merge\">git merge</h4>\n<p>git merge dev把dev分支的工作成果合并到当前分支上</p>\n<h4 id=\"git-stash\">git stash</h4>\n<p>把当前工作现场“储藏”起来，等以后恢复现场后继续工作</p>\n<p>git stash apply 恢复“储藏”起来文件，但是恢复后，stash内容并不删除</p>\n<p>git stash drop 删除“储藏”起来文件</p>\n<p>git stash pop 恢复“储藏”起来的文件，同时把stash内容也删了</p>\n<p>git stash apply stash@{num}  指定从存储列表中删除第几个，下标从0开始</p>\n","text":"git的工作示意图 [Figure] git diff用于比较两次修改的差异git diff HEAD –   查看工作区和版本库里面最新版本的区别git resetgit reset --hard HEAD^ 回退到上一个版本git reset --hard commitId(","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"Git","slug":"Git","count":1,"path":"api/tags/Git.json"}]},{"title":"Hello World","slug":"hello-world","date":"2019-06-23T02:00:02.000Z","updated":"2020-02-16T06:30:10.945Z","comments":true,"pin":null,"path":"api/articles/hello-world.json","excerpt":"","keywords":null,"cover":null,"content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"quick-start\">Quick Start</h2>\n<h3 id=\"create-a-new-post\">Create a new post</h3>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure></div>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"run-server\">Run server</h3>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure></div>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"generate-static-files\">Generate static files</h3>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure></div>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\">Deploy to remote sites</h3>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure></div>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the ","link":"","raw":null,"photos":[],"categories":[],"tags":[]}]}